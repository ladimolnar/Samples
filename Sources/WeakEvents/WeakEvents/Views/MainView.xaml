<views:MvxWindowsPage
    x:Class="WeakEvents.Views.MainView"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:views="using:Cirrious.MvvmCross.WindowsCommon.Views"
    xmlns:userControls="using:WeakEvents.UserControls"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    mc:Ignorable="d"
    d:DesignHeight="1000"
    >

    <Grid Background="{ThemeResource ApplicationPageBackgroundThemeBrush}">
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition />
        </Grid.RowDefinitions>

        <userControls:PageHeader Grid.Row="0" PageName="Main Page"/>

        <Grid Grid.Row="1" Margin="20" >
            <Grid.ColumnDefinitions>
                <ColumnDefinition />
                <ColumnDefinition />
            </Grid.ColumnDefinitions>

            <Grid Grid.Column="0">
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition />
                </Grid.RowDefinitions>
                <StackPanel Grid.Row="0" >
                    <HyperlinkButton Content="Go to Page 1" Command="{Binding GoToPage1Command}" />
                    <HyperlinkButton Content="Go to Page 2" Command="{Binding GoToPage2Command}" />
                    <Button 
                        Content="Force a garbage collection" 
                        Command="{Binding ForceGarbageCollectionCommand}"
                        FontSize="20"
                        Margin="0,20" Padding="10,5" />
                </StackPanel>

                <ScrollViewer Grid.Row="1" Margin="0,0,10,0" VerticalScrollBarVisibility="Auto">
                    <TextBlock TextWrapping="WrapWholeWords" Margin="0,0,20,0">
                        <Bold>Weak Events are Dangerous!</Bold> <LineBreak/><LineBreak/>
                        <Span>This application demonstrates how events based on weak references can cause unexpected results.</Span><LineBreak/>
                        <Span>As an implementation for the weak event pattern we use the messaging plug-in for MvvMCross:</Span><LineBreak/>
                        <Span>NuGet: MvvmCross.HotTuna.Plugin.Messenger, version 3.5.1.</Span><LineBreak/><LineBreak/>
                        <Bold>Page</Bold> 1 will subscribe to and unsubscribe from a timer message.<LineBreak/><LineBreak/>
                        <Bold>Page 2</Bold> will subscribe to the timer message but will not explicitly unsubscribe from it. It will rely on the weak event
                        ability to allow subscribers to be garbage collected even if they did not unsubscribe.
                        This illustrates the advantages of using weak events in that they prevent memory leaks that would occur if classic events were used. 
                        However, another aspect of this process illustrates the dangers of using weak events. The subscribers will continue to be invoked
                        each time the event is raised (more precisely when the message is published) even if the subscribers got 
                        in a garbage collectable state (a.k.a zombie state).<LineBreak/><LineBreak/>
                        <Span>To demonstrate, go to Page 2, wait a few seconds and then return to the main page. At this point Page 2 will 
                        be garbage collectable and yet will continue to handle the timer message. Going to Page 2 and returning again
                        will add another zombie instance of type Page2View into the mix. 
                        You can prove that these instances of type Page2View are indeed garbage collectable by clicking the "Force a garbage collection" button. 
                        After the garbage collection runs, you will no longer see Page2View instances handling the timer message proving that those 
                        instances were indeed garbage collectable.</Span><LineBreak/><LineBreak/>
                        <Span>Note: In the case of a garbage collectable subscriber, the weak event 
                        implementation will resurrect it, invoke it and then let it become garbage collectable again.</Span>
                    </TextBlock>
                </ScrollViewer>
            </Grid>

            <userControls:LoggerViewerControl Grid.Column="1" />

        </Grid>
    </Grid>
</views:MvxWindowsPage>
